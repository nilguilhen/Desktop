/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controller.AcessaBD;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.ListIterator;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JFormattedTextField;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.text.DefaultFormatterFactory;
import javax.swing.text.MaskFormatter;
import model.Funcionario;
import model.Obra;

/**
 *
 * @author mathe
 */
public class CadastraObra extends javax.swing.JFrame {

    /**
     * Creates new form JanelaArquivoBinario
     */
    AcessaBD bd = new AcessaBD();
    ResultSet rsdados;
    ResultSet rsFunc;

    ArrayList<Obra> listaObras = new ArrayList<>();
    ArrayList<Funcionario> listaFuncionarios = new ArrayList<>();
    Obra obra;
    Funcionario func;

    public CadastraObra() {
        initComponents();
//
//        jButtonNovo.setEnabled(false);
//        jButtonEditar.setEnabled(false);
//        jButtonExcluir.setEnabled(false);
        movPrimeiro();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButtonNovo = new javax.swing.JButton();
        jButtonSalvar = new javax.swing.JButton();
        jButtonEditar = new javax.swing.JButton();
        jButtonExcluir = new javax.swing.JButton();
        jButtonAnterior = new javax.swing.JButton();
        jButtonProximo = new javax.swing.JButton();
        jTextFieldNome = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jSpinnerTempoEstimado = new javax.swing.JSpinner();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabelEndereco = new javax.swing.JLabel();
        jTextFieldEndereco = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jTextFieldCPF = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jSpinnerDia = new javax.swing.JSpinner();
        jSpinnerMes = new javax.swing.JSpinner();
        jSpinnerAno = new javax.swing.JSpinner();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jFormattedTextFieldTotal = new javax.swing.JFormattedTextField();
        jFormattedTextField1 = new javax.swing.JFormattedTextField();
        jLabel4 = new javax.swing.JLabel();
        jComboBoxFuncionario = new javax.swing.JComboBox<>();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenuPagamento = new javax.swing.JMenu();
        jMenuFuncionario = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Cadastro de Obras");

        jButtonNovo.setText("Novo");
        jButtonNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNovoActionPerformed(evt);
            }
        });

        jButtonSalvar.setText("Salvar");
        jButtonSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSalvarActionPerformed(evt);
            }
        });

        jButtonEditar.setText("Editar");
        jButtonEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEditarActionPerformed(evt);
            }
        });

        jButtonExcluir.setText("Excluir");
        jButtonExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonExcluirActionPerformed(evt);
            }
        });

        jButtonAnterior.setText("Anterior");
        jButtonAnterior.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAnteriorActionPerformed(evt);
            }
        });

        jButtonProximo.setText("Próximo");
        jButtonProximo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonProximoActionPerformed(evt);
            }
        });

        jLabel1.setText("Nome");

        jLabel2.setText("Telefone");

        jLabel3.setText("Tempo Est.");

        jSpinnerTempoEstimado.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "dia(s)", "mês(es)", "ano(s)" }));

        jLabelEndereco.setText("Endereço");

        jLabel5.setText("CPF/CNPJ");

        jLabel6.setText("Data Início");

        jSpinnerDia.setModel(new javax.swing.SpinnerNumberModel(1, 1, 31, 1));

        jSpinnerMes.setModel(new javax.swing.SpinnerNumberModel(1, 1, 12, 1));

        jSpinnerAno.setModel(new javax.swing.SpinnerNumberModel(2018, 2018, null, 1));

        jLabel7.setText("Valor Total:");

        jLabel8.setText("R$");

        jFormattedTextFieldTotal.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));

        jFormattedTextField1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jFormattedTextField1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jFormattedTextField1FocusLost(evt);
            }
        });

        jLabel4.setText("Responsável:");

        jComboBoxFuncionario.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jComboBoxFuncionarioFocusGained(evt);
            }
        });

        jMenuPagamento.setText("Pagamento");
        jMenuPagamento.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenuPagamentoMouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenuPagamento);

        jMenuFuncionario.setText("Funcionário");
        jMenuFuncionario.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenuFuncionarioMouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenuFuncionario);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(111, 111, 111)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButtonAnterior)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonProximo)
                        .addGap(164, 164, 164))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButtonNovo)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonSalvar)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonEditar)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonExcluir)
                        .addGap(97, 97, 97))))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(10, 10, 10)
                        .addComponent(jSpinnerDia, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(7, 7, 7)
                        .addComponent(jSpinnerMes, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jSpinnerAno, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(37, 37, 37)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jSpinnerTempoEstimado, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBoxFuncionario, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabelEndereco)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextFieldEndereco, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(37, 37, 37)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jTextFieldCPF, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jFormattedTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(28, 28, 28)
                                .addComponent(jTextFieldNome, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel8)
                                .addGap(5, 5, 5)
                                .addComponent(jFormattedTextFieldTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jFormattedTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldEndereco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelEndereco)
                    .addComponent(jTextFieldCPF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jSpinnerTempoEstimado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(jSpinnerDia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSpinnerMes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSpinnerAno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8)
                    .addComponent(jFormattedTextFieldTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(jComboBoxFuncionario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonAnterior)
                    .addComponent(jButtonProximo))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonNovo)
                    .addComponent(jButtonSalvar)
                    .addComponent(jButtonEditar)
                    .addComponent(jButtonExcluir))
                .addGap(23, 23, 23))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void movPrimeiro() {
        rsdados = bd.consultaObra();
        try {
            if (rsdados != null) {
                if (!rsdados.isFirst()) {
                    rsdados.first();
                    mostraDados(rsdados);
                } else {
                    JOptionPane.showMessageDialog(this, "O primeiro registro ja esta selecionado.");
                }
            }
        } catch (Exception erro) {
            System.out.println(erro + "movPrimeiro");
        }
    }

    public void movProximo() {
        try {
            if (rsdados != null) {
                if (!rsdados.isLast()) {
                    rsdados.next();
                    mostraDados(rsdados);
                } else {
                    JOptionPane.showMessageDialog(this, "Nao existe proximo elemento.");
                }
            }
        } catch (Exception erro) {
            System.out.println(erro);
        }
    }

    public void movAnterior() {
        try {
            if (rsdados != null) {
                if (!rsdados.isFirst()) {
                    rsdados.previous();
                    mostraDados(rsdados);
                } else {
                    JOptionPane.showMessageDialog(this, "Nao existe registro anterior.");
                }
            }
        } catch (Exception erro) {
            System.out.println(erro);
        }
    }

    public void movUltimo() {
        try {
            if (rsdados != null) {
                if (!rsdados.isLast()) {
                    rsdados.last();
                    mostraDados(rsdados);
                } else {
                    JOptionPane.showMessageDialog(this, "O ultimo registro ja esta selecionado.");
                }
            }
        } catch (Exception erro) {
            System.out.println(erro);
        }
    }

    private void mostraDados(ResultSet rs) {
        populaComboBoxFuncionario();
        try {
            jTextFieldNome.setText(rs.getString("obr_nome"));
            jFormattedTextField1.setText(rs.getString("obr_fone"));
            jTextFieldCPF.setText(rs.getString("obr_cpf"));
            jTextFieldEndereco.setText(rs.getString("obr_endereco"));
            jSpinnerDia.setValue(rs.getInt("obr_dia"));
            jSpinnerMes.setValue(rs.getInt("obr_mes"));
            jSpinnerAno.setValue(rs.getInt("obr_ano"));
            jSpinnerTempoEstimado.setValue(rs.getInt("obr_tempoest"));
            jComboBox1.setSelectedItem(rs.getString("obr_tempomed"));
            jComboBoxFuncionario.setSelectedItem(rs.getString("fun_nome"));
            jFormattedTextFieldTotal.setText(rs.getString("obr_valortotal"));
        } catch (SQLException erro) {
            System.out.println(erro + "mostra");
        }
    }

    private Funcionario funcionarioSelecionado() {
        //percorre o combobox
        try {
            while (rsFunc.next()) {

                if (jComboBoxFuncionario.getItemAt(jComboBoxFuncionario.getSelectedIndex()).equals(rsFunc.getString("fun_nome"))) {
                    func = new Funcionario(rsFunc.getInt("fun_id"), rsFunc.getString("fun_nome"), rsFunc.getString("fun_cpf"));
                    rsFunc.beforeFirst();
                    return func;
                }
            }
            rsFunc.beforeFirst();
        } catch (SQLException ex) {
            Logger.getLogger(CadastraObra.class.getName()).log(Level.SEVERE, null, ex);
        }

        return null;
    }

    private void limparCampos() {
        jTextFieldNome.setText("");
        jTextFieldNome.requestFocus();
        jFormattedTextField1.setText("");
        jTextFieldCPF.setText("");
        jTextFieldEndereco.setText("");
        jSpinnerDia.setValue(0);
        jSpinnerMes.setValue(0);
        jSpinnerAno.setValue(0);
        jSpinnerTempoEstimado.setValue(0);
        jComboBox1.setSelectedItem(0);
        jComboBoxFuncionario.setSelectedItem(0);
    }

    private void jButtonNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNovoActionPerformed
        limparCampos();
    }//GEN-LAST:event_jButtonNovoActionPerformed

    private void jButtonSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSalvarActionPerformed

        obra = new Obra(jTextFieldNome.getText(), jFormattedTextField1.getText(), (int) jSpinnerDia.getValue(),
                (int) jSpinnerMes.getValue(), (int) jSpinnerAno.getValue(), (int) jSpinnerTempoEstimado.getValue(),
                jComboBox1.getSelectedItem().toString(), jTextFieldCPF.getText(), jTextFieldEndereco.getText(),
                jFormattedTextFieldTotal.getText(), funcionarioSelecionado());
        bd.inserirObra(obra);

        rsdados = bd.consultaObra();
        movUltimo();

        JOptionPane.showMessageDialog(this, "Nova obra adicionada com sucesso!");
    }//GEN-LAST:event_jButtonSalvarActionPerformed

    private void jButtonAnteriorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAnteriorActionPerformed

        movAnterior();
    }//GEN-LAST:event_jButtonAnteriorActionPerformed

    private void jButtonProximoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonProximoActionPerformed
        movProximo();
    }//GEN-LAST:event_jButtonProximoActionPerformed

    private void jButtonEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEditarActionPerformed

//        arquivoBinario = new ArquivoBinarioObra();
//
//        ObjectOutputStream escritor = arquivoBinario.CriaEscritorBinario(diretorio, false);
//
//        obra = new Obra(jTextFieldNome.getText(), jFormattedTextField1.getText(), (int) jSpinnerDia.getValue(),
//                (int) jSpinnerMes.getValue(), (int) jSpinnerAno.getValue(), (int) jSpinnerTempoEstimado.getValue(),
//                jComboBox1.getSelectedItem().toString(), jTextFieldCPF.getText(), jTextFieldEndereco.getText(),
//                jFormattedTextFieldTotal.getText(), funcionarioSelecionado());
//
//        listaObras.set(indice, obra);
//
//        arquivoBinario.EscreveObjeto(escritor, listaObras, true);
//        JOptionPane.showMessageDialog(this, "Obra " + listaObras.get(indice).getNome() + " foi alterado com sucesso!");
    }//GEN-LAST:event_jButtonEditarActionPerformed

    private void jButtonExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonExcluirActionPerformed

        try {
            bd.excluiObra(rsdados.getInt("obr_id"));
        } catch (SQLException ex) {
            Logger.getLogger(CadastraFuncionario.class.getName()).log(Level.SEVERE, null, ex);
        }

        JOptionPane.showMessageDialog(null, "Obra foi excluido com sucesso!");

        movPrimeiro();

    }//GEN-LAST:event_jButtonExcluirActionPerformed

    private void jFormattedTextField1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jFormattedTextField1FocusLost
        mudaMascaraTelefone(jFormattedTextField1);
    }//GEN-LAST:event_jFormattedTextField1FocusLost

    private void jFormattedTextField1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jFormattedTextField1FocusGained
        jFormattedTextField1.setFormatterFactory(null);
    }//GEN-LAST:event_jFormattedTextField1FocusGained

    private void jMenuPagamentoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuPagamentoMouseClicked

        CadastraPagamento frame = new CadastraPagamento();
        frame.setVisible(true);
    }//GEN-LAST:event_jMenuPagamentoMouseClicked

    private void jMenuFuncionarioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuFuncionarioMouseClicked
        CadastraFuncionario frame = new CadastraFuncionario();
        frame.setVisible(true);
    }//GEN-LAST:event_jMenuFuncionarioMouseClicked

    private void jComboBoxFuncionarioFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jComboBoxFuncionarioFocusGained

        populaComboBoxFuncionario();
    }//GEN-LAST:event_jComboBoxFuncionarioFocusGained

    private void populaComboBoxFuncionario() {
        if (jComboBoxFuncionario.getItemCount() > 0) {  //se o combo nao esta vazio, remove para nao repetir dados
            jComboBoxFuncionario.removeAllItems();
        }
        rsFunc = bd.consultaFuncionario();

        try {
            if (rsFunc != null) {
                while (rsFunc.next()) {
                    jComboBoxFuncionario.addItem(rsFunc.getString("fun_nome"));
                }
                rsFunc.beforeFirst();
            } else {
                JOptionPane.showMessageDialog(this, "Nenhum funcionário cadastrado!");
            }

        } catch (SQLException ex) {
            Logger.getLogger(CadastraObra.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println("popula");
        }

    }

    private void mudaMascaraTelefone(JFormattedTextField format) {
        try {
            format.setValue(null);
            String nome = format.getText().replaceAll("-", "").replaceAll("\\(", "").replaceAll("\\)", "");
            final MaskFormatter mask = new MaskFormatter();

            switch (nome.length()) {
                case 10:
                    mask.setMask("(##)####-####");
                    format.setFormatterFactory(new DefaultFormatterFactory(mask));
                    break;
                case 11:
                    mask.setMask("(##)#####-####");
                    format.setFormatterFactory(new DefaultFormatterFactory(mask));
                    break;
                default:
                    JOptionPane.showMessageDialog(this, "Número de telefone incorreto!");
                    jFormattedTextField1.requestFocus();
                    break;
            }

            format.setText(nome);
        } catch (Exception asd) {
            System.out.println(asd);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CadastraObra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CadastraObra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CadastraObra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CadastraObra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CadastraObra().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAnterior;
    private javax.swing.JButton jButtonEditar;
    private javax.swing.JButton jButtonExcluir;
    private javax.swing.JButton jButtonNovo;
    private javax.swing.JButton jButtonProximo;
    private javax.swing.JButton jButtonSalvar;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBoxFuncionario;
    private javax.swing.JFormattedTextField jFormattedTextField1;
    private javax.swing.JFormattedTextField jFormattedTextFieldTotal;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabelEndereco;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenu jMenuFuncionario;
    private javax.swing.JMenu jMenuPagamento;
    private javax.swing.JSpinner jSpinnerAno;
    private javax.swing.JSpinner jSpinnerDia;
    private javax.swing.JSpinner jSpinnerMes;
    private javax.swing.JSpinner jSpinnerTempoEstimado;
    private javax.swing.JTextField jTextFieldCPF;
    private javax.swing.JTextField jTextFieldEndereco;
    private javax.swing.JTextField jTextFieldNome;
    // End of variables declaration//GEN-END:variables
}
